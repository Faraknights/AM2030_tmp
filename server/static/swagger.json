{
  "swagger": "2.0",
  "info": {
    "title": "~ 𝓟𝓻𝓸𝓽𝓸𝓽𝔂𝓹𝓮 ~",
    "description": "Let's start with the beginning, the sentiment analyser",
    "version": "0.0.1"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/sentiment/": {
      "post": {
        "summary": "Get sentiment analysis",
        "description": "Returns the sentiment analysis of a given text",
        "parameters": [
          {
            "name": "text",
            "in": "body",
            "description": "Text to analyze",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "This product is very good!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sentiment analysis result.\nIf the text in input contains the word 'good', then the result is happy. It is a proof of concept, with confidence always at 95%.",
            "schema": {
              "type": "object",
              "properties": {
                "sentiment": {
                  "type": "string",
                  "enum": ["positive", "neutral", "negative"]
                },
                "confidence": {
                  "type": "number",
                  "format": "float"
                },
                "comment": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "sentiment": "happy",
                "confidence": 0.95
              }
            }
          }
        }
      }
    },
    "/run/setCommand": {
      "post": {
        "summary": "Set the command to run",
        "description": "Sets the command that will be executed when running the /run endpoint.",
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "description": "New command to be executed.\nUse {inputFile} as a placeholder for the input file.\nUse {outputFile} as a placeholder for the output file.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "command": {
                  "type": "string",
                  "example": "cat {inputFile} > {outputFile}"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Command updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid command format."
          }
        }
      }
    },
    "/run/": {
      "post": {
        "summary": "Run a command",
        "description": "Runs a command with an input file",
        "parameters": [
          {
            "name": "inputFile",
            "in": "body",
            "description": "Path to the input file for the command",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "inputFile": {
                  "type": "string",
                  "example": "test.txt"
                },
                "outputFile": {
                  "type": "string",
                  "example": "output.txt"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command execution result.",
            "schema": {
              "type": "object",
              "properties": {
                "stdout": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "stdout": "Command executed successfully."
              }
            }
          },
          "400": {
            "description": "Invalid input file or other error."
          }
        }
      }
    }
  }
}
